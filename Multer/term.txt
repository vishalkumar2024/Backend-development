-> Multer - Multer is a Node.js middleware used for handling file uploads, especially when you’re working with Express.js and want to upload images, documents, or any other files through an HTML form.
-> it is a npm package
-> Don't forget the enctype="multipart/form-data" in our form.
eg.
    <form action="/profile" method="post" enctype="multipart/form-data">
        <input type="file" name="avatar" />
   </form>

-> Common Methods

Method	                                Description
-------------------------------------------------------------------
upload.single(fieldname)            	Uploads one file
upload.array(fieldname, maxCount)    	Uploads multiple files from the same field
upload.fields([{name, maxCount}])	    Uploads multiple files from different fields
upload.none()	                        Parses only text fields, no files

-> There are two ways to store files in multer 
   1. using multer.diskStorage()
   2. using multer.memoryStorage()


1. diskStorage() - multer.diskStorage() is used when you want to save uploaded files permanently (e.g., inside an /uploads folder).

. destination → Defines the folder where the file will be saved.
. filename → Defines how the uploaded file should be named.
. The uploaded file is physically stored on your server’s file system (e.g., uploads/myimage.png).
. crypto = It is a built-in Node.js module that provides cryptographic functionality — meaning it helps you perform tasks like:

🔑 Hashing passwords (e.g., SHA256, SHA512, etc.)

    🔒 Encrypting & decrypting data

    ✅ Generating secure random values (for tokens, OTPs, etc.)

    🔏 Creating digital signatures and verifying them

2. memoryStorage() - it keeps uploaded files in memory (RAM) instead of saving them to disk.

. The file is not saved to disk, Instead, it’s kept in memory (RAM) as a binary buffer, which you can send directly to:

    A cloud service like AWS S3, Cloudinary, or Firebase.
    A database like MongoDB (GridFS).

